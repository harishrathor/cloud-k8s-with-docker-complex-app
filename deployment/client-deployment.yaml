apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: ingress-nginx
  name:  client-deployment
spec:
  replicas: 3
  selector:
    matchLabels:
      component: web
  template:
    metadata:
      labels:
        component: web
    spec:
      containers:
        - name: client
          imagePullPolicy: IfNotPresent
          image: "harishrathor/k8s-with-docker-complex-client:latest"
          resources:
            limits:
              cpu: 200m
              memory: 500Mi
            requests:
              cpu: 100m
              memory: 200Mi
          ports:
          - containerPort: 3000
            name:  http

  # selector:
  #   matchLabels:
  #     app: MYAPP
  # replicas: 1
  # strategy:
  #   rollingUpdate:
  #     maxSurge: 25%
  #     maxUnavailable: 25%
  #   type: RollingUpdate
  # template:
  #   metadata:
  #namespace: ingress-nginx
  #     labels:
  #       app:  MYAPP
  #   spec:
  #     # initContainers:
  #       # Init containers are exactly like regular containers, except:
  #         # - Init containers always run to completion.
  #         # - Each init container must complete successfully before the next one starts.
  #     containers:
  #     - name:  MYAPP
  #       image:  MYAPP:latest
  #       resources:
  #         requests:
  #           cpu: 100m
  #           memory: 100Mi
  #         limits:
  #           cpu: 100m
  #           memory: 100Mi
  #       livenessProbe:
  #         tcpSocket:
  #           port: 80
  #         initialDelaySeconds: 5
  #         timeoutSeconds: 5
  #         successThreshold: 1
  #         failureThreshold: 3
  #         periodSeconds: 10
  #       readinessProbe:
  #         httpGet:
  #           path: /_status/healthz
  #           port: 80
  #         initialDelaySeconds: 5
  #         timeoutSeconds: 2
  #         successThreshold: 1
  #         failureThreshold: 3
  #         periodSeconds: 10
  #       env:
  #       - name: DB_HOST
  #         valueFrom:
  #           configMapKeyRef:
  #             name: MYAPP
  #             key: DB_HOST
  #       ports:
  #       - containerPort:  80
  #         name:  MYAPP
  #       volumeMounts:
  #       - name: localtime
  #         mountPath: /etc/localtime
  #     volumes:
  #       - name: localtime
  #         hostPath:
  #           path: /usr/share/zoneinfo/Asia/Shanghai
  #     restartPolicy: Always