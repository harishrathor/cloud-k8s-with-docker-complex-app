name: CI-CD
env:
  NODE_VERSION: '18.13'
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
  DOCKER_REGISTRY: ${{ vars.DOCKER_REGISTRY }}
  DOCKER_APP_NAME: ${{ vars.DOCKER_APP_NAME }}
  AWS_CLIENT_ID: ${{ secrets.AWS_CLIENT_ID }}
  AWS_SECRET_ID: ${{ secrets.AWS_SECRET_ID }}
  EBS_ENV_NAME: ${{vars.EBS_ENV_NAME}}

on: 
  push:
    branches:
      - master
      - main
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
    - master
    - main
jobs:
  CodeQualityCheck:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Set node version to ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Install modules
        run: npm --version && cd ./client/  && npm install
      # - name: Run UTs
      #   run: cd ./client && npm run test
      - name: Set node version to ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
  Build: 
    runs-on: ubuntu-latest
    needs: CodeQualityCheck
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}
      - 
        name: Build
        run: docker-compose -f docker-compose-dev.yml build  --build-arg "DOCKER_REGISTRY=${{ env.DOCKER_REGISTRY }}"
      -
        name: PushServerImage
        run: docker push ${{env.DOCKER_REGISTRY}}/k8s-with-docker-complex-server:latest
      -
        name: PushClientImage
        run: docker push ${{env.DOCKER_REGISTRY}}/k8s-with-docker-complex-client:latest
      -
        name: PushWorkerImage
        run: docker push ${{env.DOCKER_REGISTRY}}/k8s-with-docker-complex-worker:latest
      -
        name: PushNginxImage
        run: docker push ${{env.DOCKER_REGISTRY}}/k8s-with-docker-complex-nginx:latest
  Deployment:
    runs-on: ubuntu-latest
    needs: Build
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      - name: Get Timestamp
        uses: gerred/actions/current-time@master
        id: current-time

      - name: Run String Replace
        uses: frabert/replace-string-action@master
        id: format-time
        with:
          pattern: '[:\.]+'
          string: "${{ steps.current-time.outputs.time }}"
          replace-with: '-'
          flags: 'g'

      - name: Generate Deployment Package
        run: zip -r deploy.zip * -x "**node_modules**"

      - name: Deploy to EB
        uses: einaregilsson/beanstalk-deploy@v16
        with:
          aws_access_key: ${{ env.AWS_CLIENT_ID }}
          aws_secret_key: ${{ env.AWS_SECRET_ID }}
          application_name: ${{ env.DOCKER_APP_NAME }}
          environment_name: ${{ env.EBS_ENV_NAME }}
          version_label: "${{ env.DOCKER_APP_NAME }}-${{ steps.format-time.outputs.replaced }}"
          region: us-east-2
          deployment_package: deploy.zip
        
      
        
        
